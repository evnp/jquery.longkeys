{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"jquery.longkeys adds two custom events to jQuery:\r\n\r\n**longkeydown**  \r\n**longkeypress**\r\n\r\nThese can be used to detect keystrokes of specific durations.\r\n\r\n**Note:** use of [jquery.hotkeys](https://github.com/tzuryby/jquery.hotkeys)\r\nwith this plugin is highly recommended, but not essential.\r\n\r\n## Usage ##\r\n\r\nIn the following examples, *keys* is a string of key identifiers, separated by periods.\r\nKey names can be found\r\n[here](https://github.com/tzuryby/jquery.hotkeys/blob/master/jquery.hotkeys.js).\r\n\r\nWith jquery.hotkeys:\r\n\r\n    $(element).on( 'longkeydown.keys', handler);\r\n    $(element).off('longkeydown.keys');\r\n\r\nWith jQuery event namespacing:\r\n\r\n    $(element).on( 'longkeydown.keys.customNameSpace', handler);\r\n    $(element).off('longkeydown.keys.customNameSpace');\r\n\r\nWithout jquery.hotkeys:\r\n\r\n    $(element).on( 'longkeydown.customNameSpace', handler);\r\n    $(element).off('longkeydown.customNameSpace');\r\n\r\nIn this case the event will fire for every key, so key checking in the handler will be necessary.\r\n\r\n## Options ##\r\n\r\nThe custom events will accept a map of options that can be used to further\r\ncustomize their behavior:\r\n\r\n**length** - the minimum length of press that is considered 'long', in milliseconds.  \r\n**onDown** - a function that will be executed when the key is first pressed,\r\nbefore the length-millisecond wait.  \r\n**onShort** - a function that will be executed after an insufficiently long press. \r\n\r\nIf *length* is omitted, it is set to 300 milliseconds by default.\r\n\r\nUsage with options:\r\n\r\n    $(element).on('longkeydown.keys', {\r\n        length:  500,\r\n        onDown:  handler1,\r\n        onShort: handler2\r\n    }, handler3);\r\n\r\n","name":"jquery.longkeys","tagline":"duration-specific key events in jQuery","google":""}